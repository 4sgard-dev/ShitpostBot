// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ShitpostBot.Infrastructure;

#nullable disable

namespace ShitpostBot.Infrastructure.Migrations
{
    [DbContext(typeof(ShitpostBotDbContext))]
    partial class ShitpostBotDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0-rc.2.21480.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ShitpostBot.Domain.Post", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<decimal>("ChatChannelId")
                        .HasColumnType("decimal(20,0)");

                    b.Property<decimal>("ChatGuildId")
                        .HasColumnType("decimal(20,0)");

                    b.Property<decimal>("ChatMessageId")
                        .HasColumnType("decimal(20,0)");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("EvaluatedOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("PostUri")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("PostedOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<decimal>("PosterId")
                        .HasColumnType("decimal(20,0)");

                    b.Property<DateTimeOffset>("TrackedOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PostedOn");

                    b.HasIndex("PosterId");

                    b.ToTable("Post");

                    b.HasDiscriminator<int>("Type");
                });

            modelBuilder.Entity("ShitpostBot.Domain.ImagePost", b =>
                {
                    b.HasBaseType("ShitpostBot.Domain.Post");

                    b.HasDiscriminator().HasValue(0);
                });

            modelBuilder.Entity("ShitpostBot.Domain.LinkPost", b =>
                {
                    b.HasBaseType("ShitpostBot.Domain.Post");

                    b.HasDiscriminator().HasValue(1);
                });
#pragma warning restore 612, 618
        }
    }
}
